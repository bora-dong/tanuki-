KPP_PADDING0 = 7
KPP_PADDING1 = 5
USI_HASH_FOR_BENCHMARK=\"1024\"
EVALUATE_TABLE_SIZE = 0x40000000LL
TARGET_PREFIX = tanuki-gcc

SEARCH_FUTILITY_MARGIN_INTERCEPT=68493
STATIC_NULL_MOVE_PRUNING_DEPTH_THRESHOLD=8
SEARCH_NULL_MOVE_DEPTH_THRESHOLD=4
SEARCH_NULL_MOVE_REDUCTION_SLOPE=256
SEARCH_NULL_MOVE_REDUCTION_INTERCEPT=6
SEARCH_NULL_MOVE_MARGIN=90
SEARCH_NULL_MOVE_NULL_SCORE_DEPTH_THRESHOLD=12
SEARCH_NULL_FAIL_LOW_SCORE_DEPTH_THRESHOLD=10
SEARCH_PROBCUT_DEPTH_THRESHOLD=10
SEARCH_PROBCUT_RBETA_SCORE_DELTA=200
SEARCH_PROBCUT_RBETA_DEPTH_DELTA=8
SEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_THRESHOLD=10
SEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_NODE_DEPTH_THRESHOLD=16
SEARCH_INTERNAL_ITERATIVE_DEEPENING_SCORE_MARGIN=256
SEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_DELTA=4
SEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_DEPTH_SCALE=512
SEARCH_SINGULAR_EXTENSION_DEPTH_THRESHOLD=16
SEARCH_SINGULAR_EXTENSION_TTE_DEPTH_THRESHOLD=6
SEARCH_SINGULAR_EXTENSION_NULL_WINDOW_SEARCH_DEPTH_SCALE=512
SEARCH_FUTILITY_MOVE_COUNTS_SCALE=307
SEARCH_FUTILITY_MOVE_COUNTS_POWER=1843
SEARCH_FUTILITY_MOVE_COUNTS_INTERCEPT=3073
SEARCH_FUTILITY_PRUNING_PV_REDUCTION_SLOPE=341
SEARCH_FUTILITY_PRUNING_PV_REDUCTION_INTERCEPT=128
SEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_SLOPE=455
SEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_INTERCEPT=337
SEARCH_FUTILITY_PRUNING_SCORE_GAIN_SLOPE=2048
SEARCH_FUTILITY_PRUNING_PREDICTED_DEPTH_THRESHOLD=8
SEARCH_LATE_MOVE_REDUCTION_DEPTH_THRESHOLD=6

COMPILER = g++
CFLAGS   = -std=c++11 -fno-exceptions -fno-rtti -m64 -Wextra -Ofast -DKPP_PADDING0=$(KPP_PADDING0) -DKPP_PADDING1=$(KPP_PADDING1) -DUSI_HASH_FOR_BENCHMARK=$(USI_HASH_FOR_BENCHMARK) -DEVALUATE_TABLE_SIZE=$(EVALUATE_TABLE_SIZE) -DMY_NAME=\"$(TARGET_PREFIX)\" -DSEARCH_FUTILITY_MARGIN_INTERCEPT=$(SEARCH_FUTILITY_MARGIN_INTERCEPT) -DSTATIC_NULL_MOVE_PRUNING_DEPTH_THRESHOLD=$(STATIC_NULL_MOVE_PRUNING_DEPTH_THRESHOLD) -DSEARCH_NULL_MOVE_DEPTH_THRESHOLD=$(SEARCH_NULL_MOVE_DEPTH_THRESHOLD) -DSEARCH_NULL_MOVE_REDUCTION_SLOPE=$(SEARCH_NULL_MOVE_REDUCTION_SLOPE) -DSEARCH_NULL_MOVE_REDUCTION_INTERCEPT=$(SEARCH_NULL_MOVE_REDUCTION_INTERCEPT) -DSEARCH_NULL_MOVE_MARGIN=$(SEARCH_NULL_MOVE_MARGIN) -DSEARCH_NULL_MOVE_NULL_SCORE_DEPTH_THRESHOLD=$(SEARCH_NULL_MOVE_NULL_SCORE_DEPTH_THRESHOLD) -DSEARCH_NULL_FAIL_LOW_SCORE_DEPTH_THRESHOLD=$(SEARCH_NULL_FAIL_LOW_SCORE_DEPTH_THRESHOLD) -DSEARCH_PROBCUT_DEPTH_THRESHOLD=$(SEARCH_PROBCUT_DEPTH_THRESHOLD) -DSEARCH_PROBCUT_RBETA_SCORE_DELTA=$(SEARCH_PROBCUT_RBETA_SCORE_DELTA) -DSEARCH_PROBCUT_RBETA_DEPTH_DELTA=$(SEARCH_PROBCUT_RBETA_DEPTH_DELTA) -DSEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_THRESHOLD=$(SEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_THRESHOLD) -DSEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_NODE_DEPTH_THRESHOLD=$(SEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_NODE_DEPTH_THRESHOLD) -DSEARCH_INTERNAL_ITERATIVE_DEEPENING_SCORE_MARGIN=$(SEARCH_INTERNAL_ITERATIVE_DEEPENING_SCORE_MARGIN) -DSEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_DELTA=$(SEARCH_INTERNAL_ITERATIVE_DEEPENING_PV_NODE_DEPTH_DELTA) -DSEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_DEPTH_SCALE=$(SEARCH_INTERNAL_ITERATIVE_DEEPENING_NON_PV_DEPTH_SCALE) -DSEARCH_SINGULAR_EXTENSION_DEPTH_THRESHOLD=$(SEARCH_SINGULAR_EXTENSION_DEPTH_THRESHOLD) -DSEARCH_SINGULAR_EXTENSION_TTE_DEPTH_THRESHOLD=$(SEARCH_SINGULAR_EXTENSION_TTE_DEPTH_THRESHOLD) -DSEARCH_SINGULAR_EXTENSION_NULL_WINDOW_SEARCH_DEPTH_SCALE=$(SEARCH_SINGULAR_EXTENSION_NULL_WINDOW_SEARCH_DEPTH_SCALE) -DSEARCH_FUTILITY_MOVE_COUNTS_SCALE=$(SEARCH_FUTILITY_MOVE_COUNTS_SCALE) -DSEARCH_FUTILITY_MOVE_COUNTS_POWER=$(SEARCH_FUTILITY_MOVE_COUNTS_POWER) -DSEARCH_FUTILITY_MOVE_COUNTS_INTERCEPT=$(SEARCH_FUTILITY_MOVE_COUNTS_INTERCEPT) -DSEARCH_FUTILITY_PRUNING_PV_REDUCTION_SLOPE=$(SEARCH_FUTILITY_PRUNING_PV_REDUCTION_SLOPE) -DSEARCH_FUTILITY_PRUNING_PV_REDUCTION_INTERCEPT=$(SEARCH_FUTILITY_PRUNING_PV_REDUCTION_INTERCEPT) -DSEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_SLOPE=$(SEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_SLOPE) -DSEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_INTERCEPT=$(SEARCH_FUTILITY_PRUNING_NON_PV_REDUCTION_INTERCEPT) -DSEARCH_FUTILITY_PRUNING_SCORE_GAIN_SLOPE=$(SEARCH_FUTILITY_PRUNING_SCORE_GAIN_SLOPE) -DSEARCH_FUTILITY_PRUNING_PREDICTED_DEPTH_THRESHOLD=$(SEARCH_FUTILITY_PRUNING_PREDICTED_DEPTH_THRESHOLD) -DSEARCH_LATE_MOVE_REDUCTION_DEPTH_THRESHOLD=$(SEARCH_LATE_MOVE_REDUCTION_DEPTH_THRESHOLD) 
LDFLAGS  = -flto -lpthread -lgcov
LIBS     =
INCLUDE  = #-I../include
ifeq ($(OS),Windows_NT)
  TARGET = $(TARGET_PREFIX).exe
  LDFLAGS += -static
else
  TARGET = $(TARGET_PREFIX)
endif
OBJDIR   = ../obj
ifeq "$(strip $(OBJDIR))" ""
  OBJDIR = ..
endif
#SOURCES  = $(wildcard *.cpp)
SOURCES  = main.cpp bitboard.cpp init.cpp position.cpp evalList.cpp \
           move.cpp movePicker.cpp square.cpp usi.cpp generateMoves.cpp evaluate.cpp \
           search.cpp hand.cpp tt.cpp timeManager.cpp book.cpp benchmark.cpp \
           thread.cpp common.cpp pieceScore.cpp string_util.cpp limits_type.cpp csa1.cpp time_util.cpp
OBJECTS  = $(addprefix $(OBJDIR)/, $(SOURCES:.cpp=.o))
DEPENDS  = $(OBJECTS:.o=.d)
PGO_TARGET = native

$(TARGET): $(OBJECTS) $(LIBS)
	$(COMPILER) -o $@ $^ $(LDFLAGS) $(CFLAGS)

$(OBJDIR)/%.o: %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(COMPILER) $(CFLAGS) $(INCLUDE) -o $@ -c $<

all: clean $(TARGET)

native:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -DHAVE_SSE42 -DHAVE_BMI2 -DHAVE_AVX2 -march=native' LDFLAGS='$(LDFLAGS)' $(TARGET)

broadwell:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -DHAVE_SSE42 -DHAVE_BMI2 -DHAVE_AVX2 -march=broadwell' LDFLAGS='$(LDFLAGS)' $(TARGET)

avx2:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -DHAVE_SSE42 -DHAVE_BMI2 -DHAVE_AVX2 -mavx2 -mbmi2' LDFLAGS='$(LDFLAGS)' $(TARGET)

bmi2:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -DHAVE_SSE42 -DHAVE_BMI2 -msse4.2 -mbmi2' LDFLAGS='$(LDFLAGS)' $(TARGET)

sse:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -DHAVE_SSE42 -msse4.2' LDFLAGS='$(LDFLAGS)' $(TARGET)

sse41:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG -DHAVE_SSE4 -msse4.1' LDFLAGS='$(LDFLAGS)' $(TARGET)

nosse:
	$(MAKE) CFLAGS='$(CFLAGS) -DNDEBUG ' LDFLAGS='$(LDFLAGS)' $(TARGET)

prof:
	$(MAKE) CFLAGS='$(CFLAGS) -pg' bmi2

profgen:
	$(MAKE) CFLAGS='$(CFLAGS) -fprofile-generate' LDFLAGS='$(LDFLAGS) -fprofile-generate' $(PGO_TARGET)

profuse:
	$(MAKE) CFLAGS='$(CFLAGS) -fprofile-use -fprofile-correction' LDFLAGS='$(LDFLAGS) -fprofile-use -fprofile-correction' $(PGO_TARGET)

pgo:
	$(MAKE) profgen
	@./$(TARGET) bench | grep "info nodes"
	@touch *.[ch]pp
	$(MAKE) profuse

clean:
	rm -f $(OBJECTS) $(DEPENDS) $(TARGET) ${OBJECTS:.o=.gcda} default.profdata *.profraw

-include $(DEPENDS)
